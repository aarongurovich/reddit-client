{"ast":null,"code":"var _jsxFileName = \"/Users/aarongurovich/reddit-client/src/components/PostDetail.js\",\n  _s = $RefreshSig$();\n// src/components/PostDetail.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    axios.get(`https://www.reddit.com/comments/${id}.json`).then(response => {\n      setPost(response.data[0].data.children[0].data);\n      setComments(response.data[1].data.children);\n    }).catch(error => console.error('Error fetching post details:', error));\n  }, [id]);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: post.selftext_html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.data.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: comment.data.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, comment.data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetail, \"mbnINqcckgVPbDwrc0dC1vbv93w=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","PostDetail","_s","id","post","setPost","comments","setComments","get","then","response","data","children","catch","error","console","fileName","_jsxFileName","lineNumber","columnNumber","title","dangerouslySetInnerHTML","__html","selftext_html","map","comment","body","author","_c","$RefreshReg$"],"sources":["/Users/aarongurovich/reddit-client/src/components/PostDetail.js"],"sourcesContent":["// src/components/PostDetail.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction PostDetail() {\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    axios.get(`https://www.reddit.com/comments/${id}.json`)\n      .then(response => {\n        setPost(response.data[0].data.children[0].data);\n        setComments(response.data[1].data.children);\n      })\n      .catch(error => console.error('Error fetching post details:', error));\n  }, [id]);\n\n  if (!post) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>{post.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: post.selftext_html }} />\n      <h2>Comments</h2>\n      {comments.map(comment => (\n        <div key={comment.data.id}>\n          <p>{comment.data.body}</p>\n          <small>{comment.data.author}</small>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PostDetail;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACW,GAAG,CAAC,mCAAmCL,EAAE,OAAO,CAAC,CACpDM,IAAI,CAACC,QAAQ,IAAI;MAChBL,OAAO,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC;MAC/CJ,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACC,QAAQ,CAAC;IAC7C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE,oBAAOJ,OAAA;IAAAY,QAAA,EAAK;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvC,oBACEnB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAKR,IAAI,CAACgB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBnB,OAAA;MAAKqB,uBAAuB,EAAE;QAAEC,MAAM,EAAElB,IAAI,CAACmB;MAAc;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEnB,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBb,QAAQ,CAACkB,GAAG,CAACC,OAAO,iBACnBzB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAIa,OAAO,CAACd,IAAI,CAACe;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BnB,OAAA;QAAAY,QAAA,EAAQa,OAAO,CAACd,IAAI,CAACgB;MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAF5BM,OAAO,CAACd,IAAI,CAACR,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CA7BQD,UAAU;EAAA,QACFH,SAAS;AAAA;AAAA8B,EAAA,GADjB3B,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}