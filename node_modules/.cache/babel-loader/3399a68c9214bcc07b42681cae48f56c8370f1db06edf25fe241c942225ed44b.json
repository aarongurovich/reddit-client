{"ast":null,"code":"var _jsxFileName = \"/Users/aarongurovich/reddit-client/src/components/ThemeSwitcher.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { ThemeContext } from '../ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeSwitcher = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: `theme-switcher ${theme}`,\n    children: [\"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeSwitcher, \"EFRZgBTSn7R64yv9sbxwgPkwfJQ=\");\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\nvar _c;\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"names":["React","useContext","ThemeContext","jsxDEV","_jsxDEV","ThemeSwitcher","_s","theme","toggleTheme","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aarongurovich/reddit-client/src/components/ThemeSwitcher.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { ThemeContext } from '../ThemeContext';\n\nconst ThemeSwitcher = () => {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <button onClick={toggleTheme} className={`theme-switcher ${theme}`}>\n      Switch to {theme === 'light' ? 'Dark' : 'Light'} Mode\n    </button>\n  );\n};\n\nexport default ThemeSwitcher;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAACC,YAAY,CAAC;EAEvD,oBACEE,OAAA;IAAQK,OAAO,EAAED,WAAY;IAACE,SAAS,EAAE,kBAAkBH,KAAK,EAAG;IAAAI,QAAA,GAAC,YACxD,EAACJ,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,EAAC,OAClD;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACT,EAAA,CARID,aAAa;AAAAW,EAAA,GAAbX,aAAa;AAUnB,eAAeA,aAAa;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}