{"ast":null,"code":"// src/features/posts/postsSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  posts: [],\n  searchResults: [],\n  isLoading: false,\n  error: null\n};\n\n// Thunks for fetching posts\nexport const fetchPopularPosts = createAsyncThunk('posts/fetchPopularPosts', async () => {\n  const response = await axios.get('https://www.reddit.com/r/popular.json');\n  return response.data.data.children;\n});\nexport const searchPosts = createAsyncThunk('posts/searchPosts', async query => {\n  const response = await axios.get(`https://www.reddit.com/search.json?q=${query}`);\n  return response.data.data.children;\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPopularPosts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchPopularPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n    }).addCase(fetchPopularPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    }).addCase(searchPosts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(searchPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.searchResults = action.payload;\n    }).addCase(searchPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","searchResults","isLoading","error","fetchPopularPosts","response","get","data","children","searchPosts","query","postsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/aarongurovich/reddit-client/reddit-client/src/features/posts/postsSlice.js"],"sourcesContent":["// src/features/posts/postsSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = {\n  posts: [],\n  searchResults: [],\n  isLoading: false,\n  error: null,\n};\n\n// Thunks for fetching posts\nexport const fetchPopularPosts = createAsyncThunk('posts/fetchPopularPosts', async () => {\n  const response = await axios.get('https://www.reddit.com/r/popular.json');\n  return response.data.data.children;\n});\n\nexport const searchPosts = createAsyncThunk('posts/searchPosts', async (query) => {\n  const response = await axios.get(`https://www.reddit.com/search.json?q=${query}`);\n  return response.data.data.children;\n});\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPopularPosts.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchPopularPosts.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.posts = action.payload;\n      })\n      .addCase(fetchPopularPosts.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.error.message;\n      })\n      .addCase(searchPosts.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(searchPosts.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.searchResults = action.payload;\n      })\n      .addCase(searchPosts.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default postsSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,EAAE;EACjBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAAC,yBAAyB,EAAE,YAAY;EACvF,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,uCAAuC,CAAC;EACzE,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACC,QAAQ;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGZ,gBAAgB,CAAC,mBAAmB,EAAE,MAAOa,KAAK,IAAK;EAChF,MAAML,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,wCAAwCI,KAAK,EAAE,CAAC;EACjF,OAAOL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACC,QAAQ;AACpC,CAAC,CAAC;AAEF,MAAMG,UAAU,GAAGf,WAAW,CAAC;EAC7BgB,IAAI,EAAE,OAAO;EACbb,YAAY;EACZc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,iBAAiB,CAACa,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDa,OAAO,CAACZ,iBAAiB,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACZ,iBAAiB,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO;IACpC,CAAC,CAAC,CACDP,OAAO,CAACP,WAAW,CAACQ,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDa,OAAO,CAACP,WAAW,CAACU,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACjB,aAAa,GAAGmB,MAAM,CAACC,OAAO;IACtC,CAAC,CAAC,CACDL,OAAO,CAACP,WAAW,CAACa,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,UAAU,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}